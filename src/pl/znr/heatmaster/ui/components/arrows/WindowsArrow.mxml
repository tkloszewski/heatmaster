<?xml version="1.0"?>
<arrows:HeatMasterArrow xmlns:fx="http://ns.adobe.com/mxml/2009"
                        xmlns:mx="library://ns.adobe.com/flex/mx"
                        xmlns:s="library://ns.adobe.com/flex/spark"
                        xmlns:arrows="pl.znr.heatmaster.ui.components.arrows.*"
                        creationComplete="arrowInitialized()">
    <!-- To change this template use File | Settings | File Templates. -->
    <fx:Script><![CDATA[
        import mx.controls.Alert;

        import pl.znr.heatmaster.constants.combo.ConversionUnits;

        import pl.znr.heatmaster.core.ConvertedResult;
        import pl.znr.heatmaster.core.ProcessingResult;
        import pl.znr.heatmaster.core.calc.model.MonthEnergyData;
        import pl.znr.heatmaster.core.converter.ConversionData;

        private var originalValueLabelY:int = 10;
        private var unitsInlineValueLabelY:int = 20;

        override protected function getValueLabel():Label {
            return windowsArrowLabel;
        }

        override protected function getMonthValue(resultData:ProcessingResult, month:int):Number {
            var monthlyData:ConvertedResult = resultData.monthlyConvertedData[month] as ConvertedResult;
            return monthlyData.enWindows;
        }

        override protected function getYearValue(resultData:ProcessingResult, month:int):Number {
            return resultData.yearlyAggregatedConvertedData.enWindows;
        }

        override protected function getMaxScaleRatio():Number {
            return 2;
        }

        override protected function getSeparateUnitNameLabel():Label {
            return winUnitLabel;
        }

        override protected function setAndGetImageArrow(value:Number):Image {
            var regularArrowVisible:Boolean = value > 0;
            windowsImgArrow.visible = regularArrowVisible;
            windowsGainImgArrow.visible = !regularArrowVisible;
            return regularArrowVisible ? windowsImgArrow : windowsGainImgArrow;
        }

        override protected function adjustPercentageLabel(label:Label):void {
            super.adjustPercentageLabel(label);
        }

        override protected function arrowInitialized():void {
            super.arrowInitialized();
            windowsArrowLabel.y = originalValueLabelY;
        }

        override protected function setValueLabelOriginalYPosition():void {
            windowsArrowLabel.y = originalValueLabelY;
        }

        override protected function setValueLabelWithUnitsInlinePosition():void {
            windowsArrowLabel.y = unitsInlineValueLabelY;
        }
        ]]></fx:Script>


    <mx:Image id="windowsImgArrow" x="70" y="2" maintainAspectRatio="false" source="@Embed('/pl/znr/heatmaster/assets/images/arrows/orange_left.png')"/>
    <mx:Image id="windowsGainImgArrow" x="70" y="2" visible="false" maintainAspectRatio="false" source="@Embed('/pl/znr/heatmaster/assets/images/arrows/green_right.png')"/>

    <s:Label id="windowsArrowLabel" x="0" y="10" width="74" height="22" color="#FF6600" styleName="arrowLabelStyle"
             text="" />

    <s:Label x="2" y="28" id="winUnitLabel" width="74" height="22" styleName="arrowLabelStyle"/>


</arrows:HeatMasterArrow>
