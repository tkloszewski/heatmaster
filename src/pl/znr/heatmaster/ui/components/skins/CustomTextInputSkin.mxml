<?xml version="1.0"?>
<s:SparkSkin name="CustomNumericStepperSkin"
             xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             xmlns:s="library://ns.adobe.com/flex/spark">

    <fx:Metadata>
        <![CDATA[
            /**
             * @copy spark.skins.spark.ApplicationSkin#hostComponent
             */
            [HostComponent("spark.components.TextInput")]
        ]]>
        </fx:Metadata>

        <fx:Script fb:purpose="styling">
    		<![CDATA[
            import mx.controls.Alert;
            import mx.core.FlexVersion;

    		/* Define the skin elements that should not be colorized. */
            static private const exclusions:Array = [ ];

    		/* exclusions before Flex 4.5 for backwards-compatibility purposes */
    		static private const exclusions_4_0:Array = [];

            /**
             * @private
             */
            override public function get colorizeExclusions():Array
    		{
    			// Since border is styleable via borderColor, no need to allow chromeColor to affect
    			// the border.  This is wrapped in a compatibility flag since this change was added
    			// in Flex 4.5
    			if (FlexVersion.compatibilityVersion < FlexVersion.VERSION_4_5)
    			{
    				return exclusions_4_0;
    			}

    			return exclusions;
    		}

            /* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
            static private const contentFill:Array = ["bgFill"];

            /**
             * @private
             */
            override public function get contentItems():Array {return contentFill};

            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }

            /**
             * @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                if (getStyle("borderVisible") == true)
                {
                    border.visible = true;
                    shadow.visible = true;
                    background.left = background.top = background.right = background.bottom = 1;
                    textDisplay.left = textDisplay.top = textDisplay.right = textDisplay.bottom = 1;
                }
                else
                {
                    border.visible = false;
                    shadow.visible = false;
                    background.left = background.top = background.right = background.bottom = 0;
                    textDisplay.left = textDisplay.top = textDisplay.right = textDisplay.bottom = 0;
                }

                borderStroke.color = getStyle("borderColor");
                borderStroke.alpha = getStyle("borderAlpha");

                if(this.currentState == "disabled" || this.currentState == "disabledWithPrompt"){
                   //textDisplay.setStyle("backgroundColor","red");
                   // Alert.show("Disabled state...");
                }


                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
    		]]>
        </fx:Script>

        <s:states>
            <s:State name="normal"/>
            <s:State name="disabled" stateGroups="disabledStates"/>
            <s:State name="normalWithPrompt"/>
            <s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
        </s:states>

        <!-- border -->
        <!--- @private -->
        <s:Rect left="0" right="0" top="0" bottom="0" id="border">
            <s:stroke>
                <!--- @private -->
                <s:SolidColorStroke id="borderStroke" weight="1" />
            </s:stroke>
        </s:Rect>

        <!-- fill -->
        <!--- Defines the appearance of the NumericStepper component's background. -->
        <s:Rect id="background" left="1" right="1" top="1" bottom="1">
            <s:fill>
                <!--- @private
                      Defines the background fill of the NumericStepper component's background. -->
                <s:SolidColor id="bgFill" color="gray" color.disabled="green"/>
            </s:fill>
        </s:Rect>

        <!-- shadow -->
        <!--- @private -->
        <s:Rect left="1" top="1" right="1" height="1" id="shadow">
            <s:fill>
                <s:SolidColor color="0x000000" alpha="0.12" />
            </s:fill>
        </s:Rect>

        <!-- text -->
        <!--- @copy spark.components.supportClasses.SkinnableTextBase#textDisplay -->
        <!--backgroundColor.normal="0xf5f5f5"-->
        <s:RichEditableText id="textDisplay"
                  lineBreak="explicit"
                  verticalAlign="middle"

                  backgroundColor.normal="0xf5f5f5"
                  backgroundColor.normalWithPrompt="0xf5f5f5"
                  backgroundColor.disabledStates="0xd3d3d3"
                  multiline="false"
                  left="1" right="1" top="1" bottom="1"
                  fontSize="10"
                  fontWeight="bold"
                  paddingLeft="2" paddingTop="3"
                  paddingRight="6" paddingBottom="3"/>



</s:SparkSkin>
