<?xml version="1.0"?>
<components:HeatMasterComponent xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
                                xmlns:components="pl.znr.heatmaster.ui.components.*"
                                xmlns:s="library://ns.adobe.com/flex/spark" width="921" height="648"
        >


  <fx:Style>
     .gridHeaderLabelStyle {
       fontSize: 14px;
       color: gray;
       fontWeight: bold;
     }

     .gridCellLabelStyle {
       fontSize: 13px;
       color: black;
       fontWeight: bold;
     }

  </fx:Style>


  <fx:Script>
    <![CDATA[
    import mx.collections.ArrayCollection;

    import pl.znr.heatmaster.HeatMaster;
    import pl.znr.heatmaster.config.StationItem;
    import pl.znr.heatmaster.constants.GlobalValues;
    import pl.znr.heatmaster.core.calc.util.TemperatureCalculator;
    import pl.znr.heatmaster.core.station.Position;
    import pl.znr.heatmaster.core.station.StationDistance;
    import pl.znr.heatmaster.core.station.StationLocator;
    import pl.znr.heatmaster.ui.components.*;
    import pl.znr.heatmaster.ui.components.panel.model.StationModel;

    import spark.utils.TextFlowUtil;

    [Bindable]
    private var _mapImage:String;

    [Bindable]
    private var _mapWidth:int;

    [Bindable]
    private var _mapHeight:int;

    [Bindable]
    private var numericStepperWidth = 44;

    [Bindable]
    private var stationName:String;

    [Bindable]
    private var stationModel:StationModel;

    [Bindable]
    private var minTempString:String;

    [Bindable]
    private var avgTempString:String;

    [Bindable]
    private var stationClicked:Boolean;

    [Bindable] private var mapMouseX:int;
    [Bindable] private var mapMouseY:int;

    private var nearestStation:StationItem;
    private var nearestDistance:Number = NaN;

    private var stationLocator:StationLocator;

    private var confirmDialog:ConfirmDialog;

    public function setStations(stations:ArrayCollection, selectedStation:StationItem):void {
      stationLocator = new StationLocator(stations);
      nearestStation = selectedStation;
      stationModel = new StationModel(nearestStation.temperatures);
      stationName = nearestStation.name;

      formatAvgMinTempStrings();
    }

    public function set mapImage(value:String):void {
      _mapImage = value;
    }


    private function mapClicked(event:MouseEvent):void {
      stationClicked = true;
      controllersGroup.visible = true;
    }

    private function handleMouseOver(event:MouseEvent):void {
      if (stationClicked) {
        return;
      }

      var nearestStationDistance:StationDistance = stationLocator.findNearestStation(new Position(map.mouseX, map.mouseY));
      trace("Nearest station distance: " + nearestStationDistance.distance + " station " + nearestStationDistance.station.name);
      nearestStation = nearestStationDistance.station;
      nearestDistance = nearestStationDistance.distance;

      stationName = nearestStation.name;
      stationModel = new StationModel(nearestStation.temperatures);

      formatAvgMinTempStrings();

      mapMouseX = map.mouseX;
      mapMouseY = map.mouseY;
    }


    private function selectStation():void {
      hideMap();
      heatMasterListener.stationChanged(nearestStation,getUserSetTemperatures(),true);
    }

    private function cancelSelection():void {
      stationClicked = false;
      controllersGroup.visible = false;
      stationModel = new StationModel(nearestStation.temperatures);
    }

    private function hideMap():void {
      stationClicked = false;
      controllersGroup.visible = false;
      HeatMaster.getInstance().hideMap();
    }

    private function getUserSetTemperatures():Array {
      var result:Array = new Array(12);
      result[0] = GlobalValues.toPrecision(nst1.value, 3);
      result[1] = GlobalValues.toPrecision(nst2.value, 3);
      result[2] = GlobalValues.toPrecision(nst3.value, 3);
      result[3] = GlobalValues.toPrecision(nst4.value, 3);
      result[4] = GlobalValues.toPrecision(nst5.value, 3);
      result[5] = GlobalValues.toPrecision(nst6.value, 3);
      result[6] = GlobalValues.toPrecision(nst7.value, 3);
      result[7] = GlobalValues.toPrecision(nst8.value, 3);
      result[8] = GlobalValues.toPrecision(nst9.value, 3);
      result[9] = GlobalValues.toPrecision(nst10.value, 3);
      result[10] = GlobalValues.toPrecision(nst11.value, 3);
      result[11] = GlobalValues.toPrecision(nst12.value, 3);
      return result;
    }

    private function formatAvgMinTempStrings():void {
      avgTempString = formatTemperature(TemperatureCalculator.calcAvgTemperature(nearestStation.temperatures));
      minTempString = resourceManager.getString('hm','hm.label.temp-min-calc') + " " + formatTemperature(nearestStation.minCalcTemp);
    }

    private function formatTemperature(val:Number):String {
      return formatHMValue(val, 1);
    }
    ]]>
</fx:Script>

  <s:Group id="stationPanelWindow" >

    <s:Image x="0" y="0" source="@Embed('/pl/znr/heatmaster/assets/images/maps/stations_bkg.png')"/>
    <s:Image x="10" y="45" id="map" source="{_mapImage}" click="mapClicked(event)" mouseMove="handleMouseOver(event)" backgroundAlpha="0.0"/>

    <s:Label x="20" y="50" fontSize="16" styleName="labelStyle" color="gray" text="{resourceManager.getString('hm','hm.title.show-location')}"/>





    <s:BorderContainer id="rightPanelContainer" x="700" y="{map.y + 15}" borderVisible="false" width="230">
      <s:Label y="20" x="10" fontSize="16" styleName="labelStyle" color="gray" text="{resourceManager.getString('hm','hm.label.nearest-station')}" width="{rightPanelContainer.width - 20}" textAlign="center"/>
      <s:Label y="45" x="10" fontSize="16" styleName="popupPanelLabelOrangeStyle" text="{stationName}" width="{rightPanelContainer.width - 20}" textAlign="center" />

      <s:Group id="tempGroup"  x="20" y="70" height="45%" width="{rightPanelContainer.width - 40}">
        <mx:Grid id="myGrid" verticalGap="10" >
          <mx:GridRow>
            <mx:GridItem colSpan="2">
              <mx:HRule id="hRule1" width="{rightPanelContainer.width - 40}" height="2"/>
            </mx:GridItem>
          </mx:GridRow>
          <mx:GridRow id="avgRow">
            <mx:GridItem>
              <s:Label styleName="gridHeaderLabelStyle" text="{resourceManager.getString('hm','hm.label.month')}"/>
            </mx:GridItem>
            <mx:GridItem >
              <s:Group width="36">
                <s:RichText styleName="gridHeaderLabelStyle">
                  <s:span>{resourceManager.getString('hm','hm.label.temp-avg')} [</s:span><s:span baselineShift="superscript">0</s:span><s:span>C]</s:span>
                </s:RichText>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>
          <mx:GridRow>
            <mx:GridItem colSpan="2">
              <mx:HRule id="hRule2" width="{rightPanelContainer.width - 40}" height="2"/>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row1">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_1')}" />
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t1)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst1" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}"  stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t1}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}"
                                  visible="{stationClicked}" skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>

          </mx:GridRow>

          <mx:GridRow id="row2">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_2')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t2)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst2" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}"  stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t2}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}"
                                  visible="{stationClicked}" skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row3">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_3')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t3)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst3" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t3}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row4">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_4')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t4)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper id="nst4" y="-3" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t4}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row5">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_5')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t5)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst5" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t5}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row6">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_6')}" />
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t6)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst6" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t6}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row7">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_7')}" />
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t7)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst7" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}"  stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t7}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}"  valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row8">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_8')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t8)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst8" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t8}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}" valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row9">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_9')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t9)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst9" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t9}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}" valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row10">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_10')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t10)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst10" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t10}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}" valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row11">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_11')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center">
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t11)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst11" styleName="gridCellLabelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t11}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}" valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

          <mx:GridRow id="row12">
            <mx:GridItem>
              <s:Label styleName="gridCellLabelStyle" text="{resourceManager.getString('hm','hm.dropdown.month_12')}"/>
            </mx:GridItem>
            <mx:GridItem horizontalAlign="center" >
              <s:Group>
                <s:Label styleName="gridCellLabelStyle" text="{formatTemperature(stationModel.t12)}" visible="{!stationClicked}" width="36" textAlign="center"/>
                <s:NumericStepper y="-3" id="nst12" styleName="labelStyle" height="20" width="{numericStepperWidth}" stepSize="0.1" minimum="-30"
                                  maximum="30" value="{stationModel.t12}"
                                  valueParseFunction="{GlobalValues.parseFloatValue}" valueFormatFunction="{formatTemperature}" visible="{stationClicked}"
                                  skinClass="pl.znr.heatmaster.ui.components.skins.HeatMasterNumericStepperSkin"/>
              </s:Group>
            </mx:GridItem>
          </mx:GridRow>

        </mx:Grid>
      </s:Group>


      <s:RichText id="minCalcTempRichText" fontSize="12" fontWeight="bold" color="gray"  x="20" y="{tempGroup.y + tempGroup.height + 30}" width="{rightPanelContainer.width - 40}"
              text="{minTempString}" textAlign="left"/>

      <s:Group id="controllersGroup" y="{minCalcTempRichText.y + minCalcTempRichText.height + 15}" x="20" width="{rightPanelContainer.width - 40}" visible="false">
        <s:layout>
          <s:HorizontalLayout horizontalAlign="center" paddingLeft="5" paddingRight="5" paddingTop="10"/>
        </s:layout>
        <mx:Button buttonMode="true" color="gray" fontSize="10" fontWeight="bold"
                  skin="@Embed('/pl/znr/heatmaster/assets/images/maps/ok_button_mouseover.png')"
                  click="selectStation()" />

        <!--label="{resourceManager.getString('hm','hm.button.cancel')}"-->
        <mx:Button buttonMode="true" color="gray" fontSize="10" fontWeight="bold"
                   skin="@Embed('/pl/znr/heatmaster/assets/images/maps/cancel_button_mouseover.png')"
                  click="cancelSelection()"/>
      </s:Group>

    </s:BorderContainer>

    <mx:Button right="16" top="45" buttonMode="true"
               skin="@Embed('/pl/znr/heatmaster/assets/images/icons/close_icon.png')"
               overSkin="@Embed('/pl/znr/heatmaster/assets/images/icons/close_icon_over.png')"
               click="hideMap()"/>


  </s:Group>

</components:HeatMasterComponent>
